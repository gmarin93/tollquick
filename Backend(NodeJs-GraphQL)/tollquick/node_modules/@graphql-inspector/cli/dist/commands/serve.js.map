{"version":3,"file":"serve.js","sourceRoot":"","sources":["../../src/commands/serve.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA2C;AAC3C,0BAA6B;AAC7B,gDAAmD;AAEnD,oCAAoD;AAEpD,SAAsB,KAAK,CACzB,aAAqB,EACrB,OAIC;;;;;;oBAEK,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,wBAAe,EAAE,CAAC;oBAC5C,qBAAM,iBAAU,CAAC,aAAa,EAAE;4BAC7C,OAAO,EAAE,OAAO,CAAC,OAAO;yBACzB,CAAC,EAAA;;oBAFI,MAAM,GAAG,SAEb;oBACI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,MAAM,CAAC;oBAClC,GAAG,GAAG,IAAI,4BAAY,CAAC;wBAC3B,IAAI,EAAE,IAAI;wBACV,KAAK,EAAE,IAAI;wBACX,UAAU,EAAE,IAAI;wBAChB,MAAM,QAAA;qBACP,CAAC,CAAC;;;;oBAGa,qBAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAA;;oBAA7B,GAAG,GAAI,CAAA,SAAsB,CAAA,IAA1B;oBAEV,QAAQ,CAAC,OAAO,CAAC,gCAA8B,GAAK,CAAC,CAAC;oBAEtD,qBAAM,GAAG,CAAC,GAAG,CAAC,EAAA;;oBAAd,SAAc,CAAC;;;;oBAEf,QAAQ,CAAC,KAAK,CAAC,GAAC,CAAC,OAAO,IAAI,GAAC,CAAC,CAAC;;;;;;CAElC;AA7BD,sBA6BC","sourcesContent":["import {ApolloServer} from 'apollo-server';\nimport opn = require('open');\nimport {loadSchema} from '@graphql-inspector/load';\n\nimport {Renderer, ConsoleRenderer} from '../render';\n\nexport async function serve(\n  schemaPointer: string,\n  options: {\n    renderer?: Renderer;\n    require?: string[];\n    headers?: Record<string, string>;\n  },\n) {\n  const renderer = options.renderer || new ConsoleRenderer();\n  const schema = await loadSchema(schemaPointer, {\n    headers: options.headers,\n  });\n  const PORT = process.env.PORT || '4000';\n  const app = new ApolloServer({\n    cors: true,\n    mocks: true,\n    playground: true,\n    schema,\n  });\n\n  try {\n    const {url} = await app.listen(PORT);\n\n    renderer.success(`Serving the GraphQL API on ${url}`);\n\n    await opn(url);\n  } catch (e) {\n    renderer.error(e.message || e);\n  }\n}\n"]}