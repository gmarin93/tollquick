{"version":3,"file":"ui.js","sourceRoot":"","sources":["../../src/commands/ui.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iCAAmC;AACnC,0BAA6B;AAC7B,4CAAiE;AACjE,8CAA6C;AAE7C,oCAAoD;AAEpD,SAAsB,EAAE,CAAC,OAGxB;;;;;YACO,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,wBAAe,EAAE,CAAC;YACrD,IAAI,GACR,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ;gBAC9B,CAAC,CAAC,OAAO,CAAC,IAAI;gBACd,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC3B,GAAG,GAAG,sBAAoB,IAAM,CAAC;YACjC,GAAG,GAAG,OAAO,EAAE,CAAC;YAEtB,qBAAqB;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;YAE7B,MAAM;YACN,WAAK,CAAC,GAAG,EAAE;gBACT,IAAI,EAAE,MAAM;aACb,CAAC,CAAC;YAEH,KAAK;YACL,eAAY,CAAC,GAAG,CAAC,CAAC;YAElB,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;;;;4BACf,QAAQ,CAAC,OAAO,CAAC,+BAA6B,GAAK,CAAC,CAAC;4BACrD,qBAAM,GAAG,CAAC,GAAG,CAAC,EAAA;;4BAAd,SAAc,CAAC;;;;iBAChB,CAAC,CAAC;;;;CACJ;AA3BD,gBA2BC","sourcesContent":["import * as express from 'express';\nimport opn = require('open');\nimport {middleware as uiMiddleware} from '@graphql-inspector/ui';\nimport {apply} from '@graphql-inspector/api';\n\nimport {Renderer, ConsoleRenderer} from '../render';\n\nexport async function ui(options: {\n  renderer?: Renderer;\n  port: string | number;\n}) {\n  const renderer = options.renderer || new ConsoleRenderer();\n  const PORT =\n    typeof options.port === 'number'\n      ? options.port\n      : parseInt(options.port, 10);\n  const url = `http://localhost:${PORT}`;\n  const app = express();\n\n  // This is used by ui\n  process.env.PORT = PORT + '';\n\n  // API\n  apply(app, {\n    path: '/api',\n  });\n\n  // UI\n  uiMiddleware(app);\n\n  app.listen(PORT, async () => {\n    renderer.success(`GraphQL Inspector runs on ${url}`);\n    await opn(url);\n  });\n}\n"]}