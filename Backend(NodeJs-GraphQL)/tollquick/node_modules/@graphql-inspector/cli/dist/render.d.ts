import { Change, CriticalityLevel, InvalidDocument, SchemaCoverage } from '@graphql-inspector/core';
export declare function getSymbol(level: CriticalityLevel): string;
export declare function renderChange(change: Change): string[];
export declare function bolderize(msg: string): string;
export declare function renderInvalidDocument(invalidDoc: InvalidDocument): string[];
export declare function renderDeprecatedUsageInDocument(invalidDoc: InvalidDocument, isCritical?: boolean): string[];
export interface Renderer {
    emit(...msgs: string[]): void;
    success(...msgs: string[]): void;
    error(...msgs: string[]): void;
    coverage(coverage: SchemaCoverage): void;
}
export declare class ConsoleRenderer implements Renderer {
    emit(...msgs: string[]): void;
    coverage(coverage: SchemaCoverage): void;
    success(...msgs: string[]): void;
    error(...msgs: string[]): void;
}
