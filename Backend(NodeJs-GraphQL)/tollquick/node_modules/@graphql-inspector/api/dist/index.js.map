{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iCAAmC;AACnC,+DAAmD;AAEnD,mCAAgC;AAEhC,SAAsB,KAAK,CAAC,MAAqC;;;;YACzD,GAAG,GAAG,OAAO,EAAE,CAAC;YAEtB,KAAK,CAAC,GAAG,EAAE;gBACT,IAAI,EAAE,MAAM,CAAC,IAAI;aAClB,CAAC,CAAC;YAEH,sBAAO,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,EAAC;;;CACjC;AARD,sBAQC;AAED,SAAgB,KAAK,CACnB,GAAwB,EACxB,MAEC;IAED,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,GAAG,CAAC;IAChC,IAAM,MAAM,GAAG,IAAI,oCAAY,CAAC;QAC9B,MAAM,iBAAA;QACN,aAAa,EAAE,IAAI;KACpB,CAAC,CAAC;IAEH,MAAM,CAAC,eAAe,CAAC;QACrB,GAAG,KAAA;QACH,IAAI,MAAA;KACL,CAAC,CAAC;AACL,CAAC;AAhBD,sBAgBC;AAED,SAAS,MAAM,CAAC,GAAwB,EAAE,IAAY;IACpD,OAAO,IAAI,OAAO,CAAO,UAAA,OAAO;QAC9B,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;YACf,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import * as express from 'express';\nimport {ApolloServer} from 'apollo-server-express';\n\nimport {schema} from './schema';\n\nexport async function serve(config: {port: number; path?: string}) {\n  const app = express();\n\n  apply(app, {\n    path: config.path,\n  });\n\n  return listen(app, config.port);\n}\n\nexport function apply(\n  app: express.Application,\n  config: {\n    path?: string;\n  },\n) {\n  const path = config.path || '/';\n  const apollo = new ApolloServer({\n    schema,\n    introspection: true,\n  });\n\n  apollo.applyMiddleware({\n    app,\n    path,\n  });\n}\n\nfunction listen(app: express.Application, port: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    app.listen(port, () => {\n      resolve();\n    });\n  });\n}\n"]}