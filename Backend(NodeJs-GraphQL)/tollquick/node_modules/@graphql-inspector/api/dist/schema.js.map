{"version":3,"file":"schema.js","sourceRoot":"","sources":["../src/schema.ts"],"names":[],"mappings":";;;;;;AAAA,+DAA2D;AAC3D,gDAA2D;AAC3D,2CAA8B;AAC9B,yCAA2C;AAC3C,6CAA+C;AAC/C,qCAAuC;AACvC,6CAA+C;AAC/C,2CAA6C;AAE7C,IAAM,IAAI,GAAG,qBAAG,4JAAA,yFAQf,IAAA,CAAC;AAEW,QAAA,MAAM,GAAG,4CAAoB,CAAC;IACzC,QAAQ,EAAE,2BAAmB,CAAC;QAC5B,IAAI;QACJ,MAAM,CAAC,QAAQ;QACf,QAAQ,CAAC,QAAQ;QACjB,IAAI,CAAC,QAAQ;QACb,QAAQ,CAAC,QAAQ;QACjB,OAAO,CAAC,QAAQ;KACjB,CAAC;IACF,SAAS,EAAE;QACT,QAAQ,CAAC,SAAS;QAClB,IAAI,CAAC,SAAS;QACd,QAAQ,CAAC,SAAS;QAClB,OAAO,CAAC,SAAS;KACX;CACT,CAAC,CAAC","sourcesContent":["import {makeExecutableSchema} from 'apollo-server-express';\nimport {mergeGraphQLSchemas} from '@graphql-modules/epoxy';\nimport gql from 'graphql-tag';\nimport * as common from './modules/common';\nimport * as coverage from './modules/coverage';\nimport * as diff from './modules/diff';\nimport * as validate from './modules/validate';\nimport * as similar from './modules/similar';\n\nconst base = gql`\n  type Query {\n    ping: String!\n  }\n\n  type Mutation {\n    ping: String!\n  }\n`;\n\nexport const schema = makeExecutableSchema({\n  typeDefs: mergeGraphQLSchemas([\n    base,\n    common.typeDefs,\n    coverage.typeDefs,\n    diff.typeDefs,\n    validate.typeDefs,\n    similar.typeDefs,\n  ]),\n  resolvers: [\n    coverage.resolvers,\n    diff.resolvers,\n    validate.resolvers,\n    similar.resolvers,\n  ] as any,\n});\n"]}